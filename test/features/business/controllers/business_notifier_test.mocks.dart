// Mocks generated by Mockito 5.4.6 from annotations
// in goldengoose/test/features/business/controllers/business_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:typed_data' as _i8;

import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:goldengoose/data/datasources/remote/firebase/firebase_data_source.dart'
    as _i2;
import 'package:goldengoose/features/business/data/repositories/business_repository.dart'
    as _i5;
import 'package:goldengoose/features/business/domain/entities/business.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseDataSource_0 extends _i1.SmartFake
    implements _i2.FirebaseDataSource {
  _FakeFirebaseDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBusiness_1 extends _i1.SmartFake implements _i3.Business {
  _FakeBusiness_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_2 extends _i1.SmartFake
    implements _i4.UserCredential {
  _FakeUserCredential_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BusinessRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBusinessRepository extends _i1.Mock
    implements _i5.BusinessRepository {
  MockBusinessRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseDataSource get firebaseDataSource => (super.noSuchMethod(
        Invocation.getter(#firebaseDataSource),
        returnValue: _FakeFirebaseDataSource_0(
          this,
          Invocation.getter(#firebaseDataSource),
        ),
      ) as _i2.FirebaseDataSource);

  @override
  String get collection => (super.noSuchMethod(
        Invocation.getter(#collection),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#collection),
        ),
      ) as String);

  @override
  _i3.Business Function(Map<String, dynamic>) get fromJson =>
      (super.noSuchMethod(
        Invocation.getter(#fromJson),
        returnValue: (Map<String, dynamic> __p0) => _FakeBusiness_1(
          this,
          Invocation.getter(#fromJson),
        ),
      ) as _i3.Business Function(Map<String, dynamic>));

  @override
  Map<String, dynamic> Function(_i3.Business) get toJson => (super.noSuchMethod(
        Invocation.getter(#toJson),
        returnValue: (_i3.Business __p0) => <String, dynamic>{},
      ) as Map<String, dynamic> Function(_i3.Business));

  @override
  _i7.Future<List<_i3.Business>> getBusinessesByCategory(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBusinessesByCategory,
          [category],
        ),
        returnValue: _i7.Future<List<_i3.Business>>.value(<_i3.Business>[]),
      ) as _i7.Future<List<_i3.Business>>);

  @override
  _i7.Future<List<_i3.Business>> searchBusinesses(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchBusinesses,
          [query],
        ),
        returnValue: _i7.Future<List<_i3.Business>>.value(<_i3.Business>[]),
      ) as _i7.Future<List<_i3.Business>>);

  @override
  _i7.Future<List<_i3.Business>> getNearbyBusinesses(
    double? latitude,
    double? longitude,
    double? radiusInKm,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNearbyBusinesses,
          [
            latitude,
            longitude,
            radiusInKm,
          ],
        ),
        returnValue: _i7.Future<List<_i3.Business>>.value(<_i3.Business>[]),
      ) as _i7.Future<List<_i3.Business>>);

  @override
  _i7.Future<List<_i3.Business>> getPopularBusinesses() => (super.noSuchMethod(
        Invocation.method(
          #getPopularBusinesses,
          [],
        ),
        returnValue: _i7.Future<List<_i3.Business>>.value(<_i3.Business>[]),
      ) as _i7.Future<List<_i3.Business>>);

  @override
  _i7.Future<void> updateBusinessRating(
    String? businessId,
    double? newRating,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBusinessRating,
          [
            businessId,
            newRating,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> uploadBusinessImage(
    String? businessId,
    _i8.Uint8List? imageBytes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadBusinessImage,
          [
            businessId,
            imageBytes,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i3.Business>> getBusinesses() => (super.noSuchMethod(
        Invocation.method(
          #getBusinesses,
          [],
        ),
        returnValue: _i7.Future<List<_i3.Business>>.value(<_i3.Business>[]),
      ) as _i7.Future<List<_i3.Business>>);

  @override
  _i7.Future<_i4.User?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i7.Future<_i4.User?>.value(),
      ) as _i7.Future<_i4.User?>);

  @override
  _i7.Future<_i4.UserCredential> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<_i4.UserCredential> createUserWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i7.Future<_i4.UserCredential>.value(_FakeUserCredential_2(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i7.Future<_i4.UserCredential>);

  @override
  _i7.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i3.Business?> get(String? id) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [id],
        ),
        returnValue: _i7.Future<_i3.Business?>.value(),
      ) as _i7.Future<_i3.Business?>);

  @override
  _i7.Future<List<_i3.Business>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i7.Future<List<_i3.Business>>.value(<_i3.Business>[]),
      ) as _i7.Future<List<_i3.Business>>);

  @override
  _i7.Future<void> create(_i3.Business? item) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [item],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> update(_i3.Business? item) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [item],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String> uploadFile(
    String? path,
    _i8.Uint8List? bytes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [
            path,
            bytes,
          ],
        ),
        returnValue: _i7.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #uploadFile,
            [
              path,
              bytes,
            ],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<void> deleteFile(String? path) => (super.noSuchMethod(
        Invocation.method(
          #deleteFile,
          [path],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
